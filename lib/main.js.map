{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nlog                       = console.log\nfrozen                    = Object.isFrozen\nassign                    = Object.assign\nshallow_freeze            = Object.freeze\nshallow_copy              = ( x, P... ) -> assign ( if Array.isArray x then [] else {} ), x, P...\n\n\n#===========================================================================================================\ndeep_copy = ( d ) ->\n  ### TAINT code duplication ###\n  ### immediately return for zero, empty string, null, undefined, NaN, false, true: ###\n  return d if ( not d ) or d is true\n  ### thx to https://github.com/lukeed/klona/blob/master/src/json.js ###\n  switch ( Object::toString.call d )\n    when '[object Array]'\n      k = d.length\n      R = []\n      while ( k-- )\n        if ( v = d[ k ] )? and ( ( typeof v ) is 'object' ) then  R[ k ] = deep_copy  v\n        else                                                      R[ k ] =            v\n      return R\n    when '[object Object]'\n      R = {}\n      for k, v of d\n        if v? and ( ( typeof v ) is 'object' ) then R[ k ] = deep_copy  v\n        else                                        R[ k ] =            v\n      return R\n  return d\n\n#===========================================================================================================\ndeep_freeze = ( d ) ->\n  ### TAINT code duplication ###\n  ### immediately return for zero, empty string, null, undefined, NaN, false, true: ###\n  return d if ( not d ) or d is true\n  ### thx to https://github.com/lukeed/klona/blob/master/src/json.js ###\n  switch ( Object::toString.call d )\n    when '[object Array]'\n      k = d.length\n      while ( k-- )\n        if ( v = d[ k ] )? and ( ( typeof v ) is 'object' ) then  d[ k ] = deep_freeze  v\n        else                                                      d[ k ] =              v\n      return shallow_freeze d\n    when '[object Object]'\n      for k, v of d\n        if v? and ( ( typeof v ) is 'object' ) then d[ k ] = deep_freeze  v\n        else                                        d[ k ] =              v\n      return shallow_freeze d\n  return d\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nfreeze_lets = lets = ( original, modifier = null ) ->\n  draft = freeze_lets.thaw original\n  modifier draft if modifier?\n  return deep_freeze draft\n\n#-----------------------------------------------------------------------------------------------------------\nfreeze_lets.lets      = freeze_lets\nfreeze_lets.assign    = ( me, P...  ) -> deep_freeze  deep_copy shallow_copy  me, P...\nfreeze_lets.freeze    = ( me        ) -> deep_freeze                          me\nfreeze_lets.thaw      = ( me        ) ->              deep_copy               me\nfreeze_lets.get       = ( me, k     ) -> me[ k ]\nfreeze_lets.set       = ( me, k, v  ) ->\n  R       = shallow_copy me\n  R[ k ]  = v\n  return shallow_freeze R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nlets.nofreeze = nofreeze_lets = ( original, modifier = null ) ->\n  draft = nofreeze_lets.thaw original\n  modifier draft if modifier?\n  ### TAINT do not copy ###\n  return deep_copy draft\n\n#-----------------------------------------------------------------------------------------------------------\nnofreeze_lets.lets    = nofreeze_lets\nnofreeze_lets.assign  = ( me, P...  ) -> deep_copy shallow_copy me, P...\nnofreeze_lets.freeze  = ( me        ) ->                        me\nnofreeze_lets.thaw    = ( me        ) -> deep_copy              me\nnofreeze_lets.get     = freeze_lets.get\nnofreeze_lets.set     = ( me, k, v  ) ->\n  R       = shallow_copy me\n  R[ k ]  = v\n  return R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = { freeze_lets, nofreeze_lets, }\n\n\n\n"
  ]
}